# YUM/DNF (RHEL/CentOS)

YUM (Yellowdog Updater, Modified) and DNF (Dandified YUM) are the primary package management tools for Red Hat-based distributions, including RHEL, CentOS, and Fedora. While DNF is the successor to YUM and is used in more recent releases, YUM is still prevalent in older systems.

## Understanding YUM and DNF

### YUM (Yellowdog Updater, Modified)

YUM is a command-line package management utility that handles software installation, updates, and removal for `.rpm` packages. It also manages dependencies and can work with various repositories.

### DNF (Dandified YUM)

DNF is the modern replacement for YUM, introduced to address performance, dependency resolution, and memory usage issues. It is backward-compatible with YUM, meaning it can perform the same functions with improved efficiency.

### Key Differences Between YUM and DNF

- **Performance**: DNF is faster and uses less memory than YUM.
- **Dependency Resolution**: DNF provides better handling of dependencies.
- **Plugin System**: DNF has a more flexible and improved plugin system.
- **Command Syntax**: Most YUM commands are compatible with DNF, but DNF introduces some new options and enhancements.

## Basic YUM/DNF Commands

### Installing Packages

To install a package with YUM:
```bash
sudo yum install package-name
```

With DNF, the command is similar:

```bash
sudo dnf install package-name
```

Example:

```bash
sudo dnf install httpd
```

### Updating Packages

To update all installed packages:

```bash
sudo yum update
```

Or with DNF:

```bash
sudo dnf upgrade
```

### Removing Packages

To remove a package:

```bash
sudo yum remove package-name
```

Or with DNF:

```bash
sudo dnf remove package-name
```

Example:

```bash
sudo dnf remove nginx
```
### Searching for Packages

To search for a package by name or description:

```bash
yum search package-name
```

Or with DNF:

```bash
dnf search package-name
```

Example:

```bash
dnf search mysql
```

### Viewing Package Information

To display detailed information about a package:

```bash
yum info package-name
```

Or with DNF:

```bash
dnf info package-name
```

Example:

```bash
dnf info vim
```

### Listing Installed Packages

To list all installed packages:

```bash
yum list installed
```

Or with DNF:

```bash
dnf list installed
```

### Cleaning Up

After installing or updating packages, you might want to clean up the package cache to free up disk space:

```bash
sudo yum clean all
```

Or with DNF:

```bash
sudo dnf clean all
```
### Managing Repositories

To list enabled repositories:

```bash
yum repolist
```

Or with DNF:

```bash
dnf repolist
```

To enable or disable a repository:

```bash
sudo yum-config-manager --enable repository-name
sudo yum-config-manager --disable repository-name
```

Or with DNF:

```bash
sudo dnf config-manager --set-enabled repository-name
sudo dnf config-manager --set-disabled repository-name
```

## Advanced YUM/DNF Usage

### Group Installation

YUM and DNF support group installation, which allows you to install a collection of related packages with a single command.

To install a package group (e.g., "Development Tools"):

```bash
sudo yum groupinstall "Development Tools"
```

Or with DNF:

```bash
sudo dnf groupinstall "Development Tools"
```

### Downgrading Packages

If you need to downgrade a package to an earlier version:

```bash
sudo yum downgrade package-name
```

Or with DNF:

```bash
sudo dnf downgrade package-name
```

### Listing Available Package Groups

To list all available package groups:

```bash
yum group list
```

Or with DNF:

```bash
dnf group list
```

### History and Rollback

Both YUM and DNF maintain a transaction history, allowing you to view past transactions or even roll back to a previous state.

To view the transaction history:

```bash
yum history
```

Or with DNF:

```bash
dnf history
```

To undo a specific transaction:

```bash
sudo yum history undo transaction-id
```

Or with DNF:

```bash
sudo dnf history undo transaction-id
```

### Resolving Dependency Issues

If you encounter dependency issues during installation or removal, YUM and DNF can attempt to resolve them automatically:

```bash
sudo yum install -y --skip-broken
```

Or with DNF:

```bash
sudo dnf install -y --skip-broken
```

## Best Practices for YUM/DNF

- **Regularly Update Your System**: Keep your system secure and up-to-date by regularly running update or upgrade commands.
- **Use `yum` or `dnf` for Package Management**: Avoid using `rpm` directly, as it does not handle dependencies. Always use `yum` or `dnf` for package management tasks.
- **Be Cautious with Third-Party Repositories**: Only enable trusted repositories to avoid potential security risks or package conflicts.
- **Clean Up Regularly**: Free up disk space by cleaning up the package cache and removing unused packages.

